{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ndas\\\\Desktop\\\\Todoitems\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport Todos from './components/Todos';\nimport Header from './components/layout/Header';\nimport AddTodo from './components/AddTodo';\nimport uuid from 'uuid';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport About from './components/About';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: []\n    };\n\n    this.markComplete = id => {\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id === id) {\n            todo.completed = !todo.completed;\n          }\n\n          return todo;\n        })\n      });\n    };\n\n    this.delTodo = id => {\n      this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      });\n    };\n\n    this.addTodo = title => {\n      console.log(title);\n      const newTodo = {\n        id: uuid.v4(),\n        title: title,\n        completed: false\n      };\n      this.setState({\n        todos: [...this.state.todos, newTodo]\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/');\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Todos, {\n        todos: this.state.todos,\n        markComplete: this.markComplete,\n        delTodo: this.delTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(AddTodo, {\n        addTodo: this.addTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/About\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\ndas\\Desktop\\Todoitems\\src\\App.js"],"names":["React","Component","Todos","Header","AddTodo","uuid","BrowserRouter","Router","Route","About","App","state","todos","markComplete","id","setState","map","todo","completed","delTodo","filter","addTodo","title","console","log","newTodo","v4","componentDidMount","axios","get","render","props"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Component } from 'react';\nimport Todos from './components/Todos';\nimport Header from './components/layout/Header'\nimport AddTodo from './components/AddTodo'\nimport uuid from 'uuid'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport About from './components/About'\n\nclass App extends Component {\n  state = {\n    todos: []\n  }\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/')\n  }\n\n    markComplete = (id) => {\n      this.setState({todos: this.state.todos.map(todo => {\n        if(todo.id === id) {\n          todo.completed = !todo.completed\n        }\n        return todo; \n      }) });\n  }\n\n  \tdelTodo = (id) => {\n  \t\tthis.setState({todos: [...this.state.todos.filter(todo => todo.id !== id)]\n  \t\t});\n  \t}\n\n  \taddTodo = (title) => {\n  \t\tconsole.log(title)\n  \t\tconst newTodo = {\n  \t\t\tid: uuid.v4(),\n  \t\t\ttitle: title,\n  \t\t\tcompleted: false\n  \t\t}\n  \t\tthis.setState({ todos: [...this.state.todos, newTodo]})\n  \t}\n\n    render() {\n      return (\n      \t<Router>\n        <div className=\"App\">\n        \t<div className=\"container\">\n          \t\t<Header />\n          \t\t<Route exact path=\"/\" render={props => (\n          \t\t\t<React.Fragment>\n          \t\t\t\t<Todos todos={this.state.todos} markComplete={this.markComplete} delTodo={this.delTodo}/>\n          \t\t\t\t<AddTodo addTodo={this.addTodo}/>\n          \t\t\t</React.Fragment>\n          \t\t\t)} /> \n          \t\t<Route path=\"/About\" component={About} />\n          \t</div>\n        </div>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}